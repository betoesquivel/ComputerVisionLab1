#!/usr/bin/env python
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
"Demonstrate content-based image retrieval using histograms"
import eve, sys, math
#------------------------------------------------------------------------------
def compare (h1, h2):
    "Work out the correlation between two histograms"
    sumx = sumy = sumxx = sumyy = sumxy = 0.0
    n = len (h1)
    for i in range (0, n):
        v1 = float (h1[i])
        v2 = float (h2[i])
        sumx += v1
        sumy += v2
        sumxx += v1 * v1
        sumxy += v1 * v2
        sumyy += v2 * v2
    v1 = sumxy - sumx * sumy / n
    v2 = math.sqrt((sumxx-sumx*sumx/n) * (sumyy-sumy*sumy/n))
    return abs (v1 / v2)
#------------------------------------------------------------------------------

# Say hello and initialize things.
if len(sys.argv) < 3:
    print >>sys.stderr, 'Usage:', sys.argv[0], '<probe> <test-images>'
    sys.exit (1)

print eve.version_info (intro="cbir 0.00 using:")
probe_file = sys.argv[1]
v_best = 0
f_best = '?'
do_display = True

# Read in the probe image and find its histogram.
im = eve.image (probe_file)
if do_display:
    eve.display (im, wait=True)
    a, probe = eve.histogram (im, limits=[0,255])

# We now enter the main loop. The basic idea is to load an image, find its
# histogram, then compare that with the histogram of the probe image.
# We are careful to skip the case when the test image is the same as the probe.
for file in sys.argv[2:]:
    if file != probe_file:
        print "Processing", file
        im = eve.image (file)
        a, h = eve.histogram (im, limits=[0,255])
        v = compare (probe, h)
        if v > v_best:
            v_best = v
            f_best = file

# We've finished our work, so say which of the test set best matches the
# probe and exit.
print 'Best match is', f_best, 'with correlation', v_best
if do_display:
    im = eve.image (f_best)
    eve.display (im, wait=True)
